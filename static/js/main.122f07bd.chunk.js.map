{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","isReversed","sortBy","goods","minLength","visibleGoods","filter","good","length","sort","a","b","reverse","map","goodsFromServer","App","useState","isStarted","setIsStarted","setIsReversed","setSortBy","setMinLength","options","Array","from","keys","className","type","onClick","onChange","event","target","value","option","ReactDOM","render","document","getElementById"],"mappings":"oMASaA,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,UAEMC,EAAeF,EAAMG,QACzB,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,KAGzB,OAAQF,GACN,IAAK,WACHG,EAAaI,OACb,MAEF,IAAK,SACHJ,EAAaI,MAAK,SAACC,EAAGC,GAIpB,OAHoBD,EAAEF,OACDG,EAAEH,UAc7B,OAJIP,GACFI,EAAaO,UAIb,6BACGP,EAAaQ,KAAI,SAACN,GAAD,OAChB,6BACGA,GADMA,SCxCXO,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsFaC,EAnFO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOf,EAAP,KAAmBkB,EAAnB,KACA,EAA4BH,mBAAS,IAArC,mBAAOd,EAAP,KAAekB,EAAf,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOZ,EAAP,KAAkBiB,EAAlB,KACA,EAAgBL,mBAASF,GAAlBX,EAAP,oBA4BMmB,EAAUC,MAAMC,KAAKD,MAAM,IAAIE,QAErC,OACE,sBAAKC,UAAU,MAAf,UACE,wCAEET,GACA,wBAAQU,KAAK,SAASC,QAjCd,kBAAMV,GAAa,IAiC3B,mBAKDD,GACC,qCACE,cAAC,EAAD,CACEhB,WAAYA,EACZC,OAAQA,EACRC,MAAOA,EACPC,UAAWA,IAGb,wBAAQuB,KAAK,SAASC,QA7Cd,kBAAMT,GAAelB,IA6C7B,qBAIA,wBAAQ0B,KAAK,SAASC,QA/CH,WACzBR,EAAU,YACVD,GAAc,IA6CR,iCAIA,wBAAQQ,KAAK,SAASC,QA9ChB,WACZR,EAAU,IACVD,GAAc,GACdE,EAAa,IA2CP,mBAIA,wBAAQM,KAAK,SAASC,QA5CT,WACnBR,EAAU,UACVD,GAAc,IA0CR,4BAIA,wBAAQU,SA3CC,SAACC,GAChB,IAAMtB,GAAUsB,EAAMC,OAAOC,MAE7BX,EAAab,IAwCqBwB,MAAO5B,EAAnC,SACGkB,EAAQT,KAAI,SAACoB,GAAD,OACX,wBAAqBD,MAAOC,EAAS,EAArC,SACGA,EAAS,GADCA,eCtF3BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.122f07bd.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  isReversed: boolean;\n  sortBy: string,\n  goods: string[];\n  minLength: number;\n};\n\nexport const GoodsList: React.FC<Props> = ({\n  isReversed,\n  sortBy,\n  goods,\n  minLength,\n}) => {\n  const visibleGoods = goods.filter(\n    good => good.length >= minLength,\n  );\n\n  switch (sortBy) {\n    case 'alphabet':\n      visibleGoods.sort();\n      break;\n\n    case 'length':\n      visibleGoods.sort((a, b) => {\n        const firstLength = a.length;\n        const secondLength = b.length;\n\n        return firstLength - secondLength;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <ul>\n      {visibleGoods.map((good) => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const [minLength, setMinLength] = useState(1);\n  const [goods] = useState(goodsFromServer);\n\n  const start = () => setIsStarted(true);\n\n  const reverse = () => setIsReversed(!isReversed);\n\n  const sortAlphabetically = () => {\n    setSortBy('alphabet');\n    setIsReversed(false);\n  };\n\n  const reset = () => {\n    setSortBy('');\n    setIsReversed(false);\n    setMinLength(1);\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n    setIsReversed(false);\n  };\n\n  const setLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const length = +event.target.value;\n\n    setMinLength(length);\n  };\n\n  const options = Array.from(Array(10).keys());\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      {!isStarted && (\n        <button type=\"button\" onClick={start}>\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <GoodsList\n            isReversed={isReversed}\n            sortBy={sortBy}\n            goods={goods}\n            minLength={minLength}\n          />\n\n          <button type=\"button\" onClick={reverse}>\n            Reverse\n          </button>\n\n          <button type=\"button\" onClick={sortAlphabetically}>\n            Sort alphabetically\n          </button>\n\n          <button type=\"button\" onClick={reset}>\n            Reset\n          </button>\n\n          <button type=\"button\" onClick={sortByLength}>\n            Sort by length\n          </button>\n\n          <select onChange={setLimit} value={minLength}>\n            {options.map((option) => (\n              <option key={option} value={option + 1}>\n                {option + 1}\n              </option>\n            ))}\n          </select>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}