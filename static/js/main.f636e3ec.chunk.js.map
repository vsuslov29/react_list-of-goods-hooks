{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","sortBy","setSortBy","minLength","setMinLength","visibleGoods","filter","length","sort","a","b","reverse","options","Array","from","keys","className","type","onClick","onChange","event","target","value","option","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,SCNXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4GaC,EAzGO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgBR,mBAASF,GA4BnBW,EA5BN,oBA4B2BC,QACzB,SAAAb,GAAI,OAAIA,EAAKc,QAAUJ,KAGzB,OAAQF,GACN,IAAK,WACHI,EAAaG,OACb,MAEF,IAAK,SACHH,EAAaG,MAAK,SAACC,EAAGC,GAIpB,OAHoBD,EAAEF,OACDG,EAAEH,UAUzBR,GACFM,EAAaM,UAGf,IAAMC,EAAUC,MAAMC,KAAKD,MAAM,IAAIE,QAErC,OACE,sBAAKC,UAAU,MAAf,UACE,uCAEEnB,EAME,qCACE,cAAC,EAAD,CACEN,MAAOc,IAGT,wBAAQY,KAAK,SAASC,QAnEhB,kBAAMlB,GAAeD,IAmE3B,qBAIA,wBAAQkB,KAAK,SAASC,QArEL,WACzBhB,EAAU,YACVF,GAAc,IAmEN,iCAIA,wBAAQiB,KAAK,SAASC,QApElB,WACZhB,EAAU,IACVF,GAAc,GACdI,EAAa,IAiEL,mBAIA,wBAAQa,KAAK,SAASC,QAlEX,WACnBhB,EAAU,UACVF,GAAc,IAgEN,4BAIA,wBAAQmB,SAjED,SAACC,GAChB,IAAMb,GAAUa,EAAMC,OAAOC,MAE7BlB,EAAaG,IA8DuBe,MAAOnB,EAAnC,SACGS,EAAQpB,KAAI,SAAC+B,GAAD,OACX,wBAAqBD,MAAOC,EAAS,EAArC,SACGA,EAAS,GADCA,WA3BnB,wBAAQN,KAAK,SAASC,QA5DhB,kBAAMpB,GAAa,IA4DzB,uBCjFV0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f636e3ec.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const [minLength, setMinLength] = useState(1);\n  const [goods] = useState(goodsFromServer);\n\n  const start = () => setIsStarted(true);\n\n  const reverse = () => setIsReversed(!isReversed);\n\n  const sortAlphabetically = () => {\n    setSortBy('alphabet');\n    setIsReversed(false);\n  };\n\n  const reset = () => {\n    setSortBy('');\n    setIsReversed(false);\n    setMinLength(1);\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n    setIsReversed(false);\n  };\n\n  const setLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const length = +event.target.value;\n\n    setMinLength(length);\n  };\n\n  const visibleGoods = goods.filter(\n    good => good.length >= minLength,\n  );\n\n  switch (sortBy) {\n    case 'alphabet':\n      visibleGoods.sort();\n      break;\n\n    case 'length':\n      visibleGoods.sort((a, b) => {\n        const firstLength = a.length;\n        const secondLength = b.length;\n\n        return firstLength - secondLength;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  const options = Array.from(Array(10).keys());\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      {!isStarted\n        ? (\n          <button type=\"button\" onClick={start}>\n            Start\n          </button>\n        ) : (\n          <>\n            <GoodsList\n              goods={visibleGoods}\n            />\n\n            <button type=\"button\" onClick={reverse}>\n              Reverse\n            </button>\n\n            <button type=\"button\" onClick={sortAlphabetically}>\n              Sort alphabetically\n            </button>\n\n            <button type=\"button\" onClick={reset}>\n              Reset\n            </button>\n\n            <button type=\"button\" onClick={sortByLength}>\n              Sort by length\n            </button>\n\n            <select onChange={setLimit} value={minLength}>\n              {options.map((option) => (\n                <option key={option} value={option + 1}>\n                  {option + 1}\n                </option>\n              ))}\n            </select>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}