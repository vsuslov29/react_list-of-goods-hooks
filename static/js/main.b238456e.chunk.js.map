{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","reverse","sortBy","goods","minLength","visibleGoods","filter","good","length","sort","a","b","map","goodsFromServer","App","useState","isStarted","setIsStarted","isReverse","setIsReverse","setSortBy","setMinLength","options","Array","from","keys","className","type","onClick","onChange","event","target","value","option","ReactDOM","render","document","getElementById"],"mappings":"oMASaA,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,UAEMC,EAAeF,EAAMG,QACzB,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,KAGzB,OAAQF,GACN,IAAK,WACHG,EAAaI,OACb,MAEF,IAAK,SACHJ,EAAaI,MAAK,SAACC,EAAGC,GAIpB,OAHoBD,EAAEF,OACDG,EAAEH,UAc7B,OAJIP,GACFI,EAAaJ,UAIb,6BACGI,EAAaO,KAAI,SAACL,GAAD,OAChB,6BACGA,GADMA,SCxCXM,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoFaC,EAjFO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOb,EAAP,KAAekB,EAAf,KACA,EAAkCL,mBAAS,GAA3C,mBAAOX,EAAP,KAAkBiB,EAAlB,KACA,EAAgBN,mBAASF,GAAlBV,EAAP,oBA4BMmB,EAAUC,MAAMC,KAAKD,MAAM,IAAIE,QAErC,OACE,sBAAKC,UAAU,MAAf,UACE,uCAEA,wBAAQC,KAAK,SAASC,QAhCZ,kBAAMX,GAAa,IAgC7B,mBAICD,GACC,qCACE,cAAC,EAAD,CACEf,QAASiB,EACThB,OAAQA,EACRC,MAAOA,EACPC,UAAWA,IAGb,wBAAQuB,KAAK,SAASC,QA3Cd,kBAAMT,GAAcD,IA2C5B,qBAIA,wBAAQS,KAAK,SAASC,QA7CH,WACzBR,EAAU,YACVD,GAAa,IA2CP,iCAIA,wBAAQQ,KAAK,SAASC,QA5ChB,WACZR,EAAU,IACVD,GAAa,GACbE,EAAa,IAyCP,mBAIA,wBAAQM,KAAK,SAASC,QA1CT,WACnBR,EAAU,UACVD,GAAa,IAwCP,4BAIA,wBAAQU,SAzCC,SAACC,GAChB,IAAMtB,GAAUsB,EAAMC,OAAOC,MAE7BX,EAAab,IAsCqBwB,MAAO5B,EAAnC,SACGkB,EAAQV,KAAI,SAACqB,GAAD,OACX,wBAAqBD,MAAOC,EAAS,EAArC,SACGA,EAAS,GADCA,eCpF3BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.b238456e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  reverse: boolean;\n  sortBy: string,\n  goods: string[];\n  minLength: number;\n};\n\nexport const GoodsList: React.FC<Props> = ({\n  reverse,\n  sortBy,\n  goods,\n  minLength,\n}) => {\n  const visibleGoods = goods.filter(\n    good => good.length >= minLength,\n  );\n\n  switch (sortBy) {\n    case 'alphabet':\n      visibleGoods.sort();\n      break;\n\n    case 'length':\n      visibleGoods.sort((a, b) => {\n        const firstLength = a.length;\n        const secondLength = b.length;\n\n        return firstLength - secondLength;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  if (reverse) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <ul>\n      {visibleGoods.map((good) => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const [minLength, setMinLength] = useState(1);\n  const [goods] = useState(goodsFromServer);\n\n  const start = () => setIsStarted(true);\n\n  const reverse = () => setIsReverse(!isReverse);\n\n  const sortAlphabetically = () => {\n    setSortBy('alphabet');\n    setIsReverse(false);\n  };\n\n  const reset = () => {\n    setSortBy('');\n    setIsReverse(false);\n    setMinLength(1);\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n    setIsReverse(false);\n  };\n\n  const setLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const length = +event.target.value;\n\n    setMinLength(length);\n  };\n\n  const options = Array.from(Array(10).keys());\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      <button type=\"button\" onClick={start}>\n        Start\n      </button>\n\n      {isStarted && (\n        <>\n          <GoodsList\n            reverse={isReverse}\n            sortBy={sortBy}\n            goods={goods}\n            minLength={minLength}\n          />\n\n          <button type=\"button\" onClick={reverse}>\n            Reverse\n          </button>\n\n          <button type=\"button\" onClick={sortAlphabetically}>\n            Sort alphabetically\n          </button>\n\n          <button type=\"button\" onClick={reset}>\n            Reset\n          </button>\n\n          <button type=\"button\" onClick={sortByLength}>\n            Sort by length\n          </button>\n\n          <select onChange={setLimit} value={minLength}>\n            {options.map((option) => (\n              <option key={option} value={option + 1}>\n                {option + 1}\n              </option>\n            ))}\n          </select>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}